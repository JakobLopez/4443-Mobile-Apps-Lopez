{"version":3,"sources":["../../src/pages/sign-in/sign-in.module.ts","../../src/pages/sign-in/sign-in.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SignInPage } from './sign-in';\n\n@NgModule({\n  declarations: [\n    SignInPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SignInPage),\n  ],\n})\nexport class SignInPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/sign-in/sign-in.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { regexValidators } from '../validator';\nimport { AuthService } from '../../providers/auth-service/auth-service';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-sign-in',\n  templateUrl: 'sign-in.html'\n})\nexport class SignInPage {\n\n  credentialsForm: FormGroup;\n  loginError: string;\n\n  constructor(public navCtrl: NavController,\n    public navParams: NavParams,\n    private formBuilder: FormBuilder,\n    private auth: AuthService) {\n\n    //Creates a formGroup that has email and password\n    //Validators.require means that it must be of non-null value\n    //The Validators.pattern() validator ensures that a control matches a regex to its value \n    this.credentialsForm = this.formBuilder.group({\n      email: [\n        '', Validators.compose([\n          Validators.pattern(regexValidators.email),\n          Validators.required\n        ])\n      ],\n      password: [\n        '', Validators.compose([\n          Validators.pattern(regexValidators.password),\n          Validators.required\n        ])\n      ]\n    });\n  }\n\n  //When sign in button hit, log user in if already exists\n  onSignIn() {\n\n    if (this.credentialsForm.valid) {\n      console.log('Email: ' +\n        this.credentialsForm.controls['email'].value);\n      console.log('Password: ' +\n        this.credentialsForm.controls['password'].value);\n\n      let data = this.credentialsForm.value;\n\n      if (!data.email) {\n        return;\n      }\n\n      //form values\n      let credentials = {\n        email: data.email,\n        password: data.password\n      };\n      //Relocates user if successful\n      this.auth.signInWithEmail(credentials)\n        .then(\n          () => this.navCtrl.setRoot('LocationPage'),\n          error => this.loginError = error.message\n        );\n    }\n  }\n\n  //Tries to log user in with google account\n  //Otherwise, catches error\n  tryGoogleLogin(){\n    this.auth.signInWithGoogle()\n    .then((res) => {\n      this.navCtrl.push('LocationPage');\n    }, (err) => {\n      this.loginError = err.message;\n    });\n  }\n\n  //Not implemented yet\n  onForgotPassword() {\n    console.log('SignInPage: onForgotPassword()');\n  }\n  \n  //Redirects user to sign up page\n  signup() {\n    this.navCtrl.push('SignupPage');\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/sign-in/sign-in.ts"],"sourceRoot":""}